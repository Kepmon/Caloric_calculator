---
import Header from '../components/Header.astro'
import WhyThisCalc from '../components/WhyThisCalc.astro'
import PersonalDataForm from '../components/PersonalDataForm.astro'
import Footer from '../components/Footer.astro'
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Calculate your caloric intake</title>
  </head>
  <body class="content-grid">
    <Header />
    <main>
      <h1>Calculate your caloric intake</h1>
      <WhyThisCalc />
      <PersonalDataForm />
    </main>
    <Footer />
  </body>
</html>

<style is:global lang="scss">
  @use '../sass/_mixins' as *;

  *,
  *::before,
  *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  :root {
    --clr-green-400: 120 100% 35%;
    --accent-clr: hsl(var(--clr-green-400));
    --outline-width: 3px;
    --border-radius: 0.5em;
    --toggler-button-width: clamp(2.25rem, 2.031rem + 1.25vi, 3rem);
    --toggler-translate-x: 0;
    --clr-white-400: 207 10% 95%;
    --clr-white-900: 207 10% 90%;
    --clr-dark-700: 207 10% 10%;
    --clr-dark-900: 207 90% 4%;
    @include theme-colors;

    @media (prefers-color-scheme: dark) {
      --toggler-translate-x: calc(var(--toggler-button-width) / 2);
      @include theme-colors(true);
    }

    & [data-theme='dark'] {
      --toggler-translate-x: calc(var(--toggler-button-width) / 2);
      @include theme-colors(true);
    }

    & [data-theme='light'] {
      --toggler-translate-x: 0;
      @include theme-colors;
    }
  }

  body {
    grid-template-rows: auto 1fr auto;
    min-height: 100vh;
    min-height: 100svh;
    font-family:
      system-ui,
      -apple-system,
      BlinkMacSystemFont,
      'Segoe UI',
      Roboto,
      Oxygen,
      Ubuntu,
      Cantarell,
      'Open Sans',
      'Helvetica Neue',
      sans-serif;
    font-size: clamp(0.875rem, 0.839rem + 0.208vi, 1rem);
    color: var(--content-text);
    background-color: var(--body-bg);
  }

  img,
  svg {
    display: block;
    max-width: 100%;
  }

  input,
  button {
    font: inherit;
  }

  button {
    border: none;
    cursor: pointer;
  }

  ul {
    list-style: none;
  }

  main {
    display: grid;
    gap: 4rem;
    padding-block: clamp(2.5rem, 2rem + 2vi, 4rem);
  }

  h1 {
    font-size: clamp(1.5rem, 1.281rem + 1.25vi, 2.25rem);
    color: var(--accent-clr);
    text-align: center;
    text-wrap: balance;
  }

  label {
    text-transform: capitalize;
    font-weight: 500;
  }

  input[data-input] {
    position: absolute;
    top: 115%;
    left: calc(
      var(--thumb-position-percent) +
        ((50 - var(--thumb-position)) / 100 * var(--thumb-size))
    );
    padding: 0.25rem;
    width: calc(var(--thumb-size) * 1.5);
    height: 1.75rem;
    background-color: var(--default-input-bg);
    border-radius: var(--border-radius);
    border: none;
    translate: -50%;
    text-align: center;
    -moz-appearance: textfield;
  }

  [data-input]::-webkit-outer-spin-button,
  [data-input]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  .sr-only {
    position: absolute;
    top: 0;
    left: 0;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }

  .content-grid,
  .full-width-grid {
    --edge-size: 1rem;
    --container-size: 120ch;
    display: grid;
    grid-template-columns:
      [full-width-start] minmax(
        var(--edge-size),
        calc((100% - var(--container-size)) / 2)
      )
      [content-start] 1fr
      [content-end] minmax(
        var(--edge-size),
        calc((100% - var(--container-size)) / 2)
      )
      [full-width-end];
  }

  .content-grid > *,
  .full-width-grid > * {
    grid-column: content;
  }

  .content-grid > .full-width-grid {
    grid-column: full-width;
  }

  .green-text {
    color: var(--accent-clr);
  }

  .label-with-svg {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    margin-block-end: 0.5em;
    font-size: 1.125em;
    font-weight: 500;
  }

  .label-with-svg > svg {
    width: var(--svg-width, 1.5rem);
    aspect-ratio: 1;
  }

  :focus-visible {
    outline: var(--outline-width) solid transparent;
    outline-offset: var(--outline-width);
  }
</style>
