---
import Units from '../svgs/Units.astro'
import Goal from '../svgs/Goal.astro'
import Gender from '../svgs/Gender.astro'
import ActivityLevel from '../svgs/ActivityLevel.astro'
import ActivityLevelsPopup from '../popups/ActivityLevelsPopup.astro'

const basicDataGroups = [
  {
    Icon: Units,
    name: 'units',
    legend: {
      ariaPrefix: 'Choose preferred',
      label: 'units'
    },
    options: [
      {
        value: 'Metric',
        id: 'metric'
      },
      {
        value: 'Imperial',
        id: 'imperial'
      }
    ]
  },
  {
    Icon: Gender,
    name: 'gender',
    legend: {
      ariaPrefix: 'Choose your',
      label: 'gender'
    },
    options: [
      {
        value: 'Male',
        id: 'male'
      },
      {
        value: 'Female',
        id: 'female'
      }
    ]
  },
  {
    Icon: Goal,
    name: 'goal',
    legend: {
      ariaPrefix: 'Choose your',
      label: 'fitness goal'
    },
    options: [
      {
        value: 'Lose Weight',
        id: 'lose-weight'
      },
      {
        value: 'Maintain',
        id: 'maintain'
      },
      {
        value: 'Gain Muscle',
        id: 'gain-muscle'
      }
    ]
  },
  {
    Icon: ActivityLevel,
    name: 'activity',
    legend: {
      ariaPrefix: 'Choose your current',
      label: 'activity level'
    },
    options: [
      {
        value: 'Little or none',
        id: 'little-or-none'
      },
      {
        value: 'Light',
        id: 'light'
      },
      {
        value: 'Moderate',
        id: 'moderate'
      },
      {
        value: 'High',
        id: 'figh'
      },
      {
        value: 'Very high',
        id: 'very-high'
      }
    ],
    label: 'show examples'
  }
]
---

<ActivityLevelsPopup />
<div class="basic-data-wrapper">
  {
    basicDataGroups.map(({ Icon, name, legend, options, label }) => (
      <fieldset>
        <legend class="label-with-svg">
          <Icon />
          <span class="sr-only">{legend.ariaPrefix}</span>
          <span class="group-label">
            {legend.label}
            {label != null && (
              <button
                type="button"
                data-button="activity-levels"
                data-open="dialog"
                class="popup-label"
              >
                ({label})
              </button>
            )}
          </span>
        </legend>
        <div class="input-pairs-wrapper">
          {options.map(({ value, id }, index) => (
            <label>
              <span>{value}</span>
              <input
                type="radio"
                name={name}
                id={id}
                checked={index === 0}
                class="btn"
              />
            </label>
          ))}
        </div>
      </fieldset>
    ))
  }
</div>

<script>
  import { handleUnitChange } from '../../helpers/sliders'

  const unitRadioBtns = [
    ...document.querySelectorAll('input[name="units"]')
  ] as HTMLInputElement[]

  unitRadioBtns.forEach((btn) => {
    const newUnit = btn.getAttribute('id') as null | 'metric' | 'imperial'
    const hasNewUnitPorperValue =
      ['metric', 'imperial'].find((unit) => unit === newUnit) != null

    if (newUnit == null || !hasNewUnitPorperValue) return

    btn.addEventListener('change', () => handleUnitChange(newUnit))
  })
</script>

<style lang="scss">
  .basic-data-wrapper {
    display: grid;
    gap: 2rem;
  }

  fieldset {
    border: none;

    legend {
      width: 100%;

      .group-label {
        text-transform: capitalize;
      }
    }

    .input-pairs-wrapper {
      display: flex;
      justify-content: center;
      flex-wrap: wrap;
      gap: 1rem;
    }

    label {
      position: relative;
      padding: 0.25rem 1.5rem;
      color: var(--darker-comp-bg);
      font-weight: 500;
      cursor: pointer;
    }

    input[type='radio'] {
      appearance: none;
      position: absolute;
      inset: 0;
      width: 100%;
      height: 100%;
      z-index: -1;

      &:checked {
        background-color: var(--accent-clr);
      }

      &:checked + label {
        color: hsl(var(--clr-dark-900));
      }
    }
  }
</style>
